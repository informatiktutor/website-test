"use strict";(self.webpackChunkinformatiktutor=self.webpackChunkinformatiktutor||[]).push([[826],{441:function(){function t(t,e){if(t){if("string"==typeof t)return r(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(t,e):void 0}}function r(t,r){(null==r||r>t.length)&&(r=t.length);for(var e=0,n=new Array(r);e<r;e++)n[e]=t[e];return n}!function(){var r,e,n,o,a,i=(r="greetings",e=document.querySelector(".js-data-"+r).getAttribute("data-"+r),JSON.parse(e)),u=document.querySelector(".js-greeting"),l=(new Date).getHours(),f=function(r,e){var n="undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(!n){if(Array.isArray(r)||(n=t(r))){n&&(r=n);var o=0,a=function(){};return{s:a,n:function(){return o>=r.length?{done:!0}:{done:!1,value:r[o++]}},e:function(t){throw t},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,u=!0,l=!1;return{s:function(){n=n.call(r)},n:function(){var t=n.next();return u=t.done,t},e:function(t){l=!0,i=t},f:function(){try{u||null==n.return||n.return()}finally{if(l)throw i}}}}(i.time_based);try{for(f.s();!(n=f.n()).done;){var c=n.value,s=(o=c.hour_range,a=2,function(t){if(Array.isArray(t))return t}(o)||function(t,r){var e=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=e){var n,o,a=[],i=!0,u=!1;try{for(e=e.call(t);!(i=(n=e.next()).done)&&(a.push(n.value),!r||a.length!==r);i=!0);}catch(t){u=!0,o=t}finally{try{i||null==e.return||e.return()}finally{if(u)throw o}}return a}}(o,a)||t(o,a)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),y=s[0],d=s[1];if(l>=y&&l<d){u.innerText=c.value;break}}}catch(t){f.e(t)}finally{f.f()}}()}},function(t){t(t.s=441)}]);
@import 'normalize.css';
@import './reset.scss';
@import './fonts.scss';
@import './colors.scss';

$max-width: 680px;
$page-padding: 100px;
// $horizontal-padding: 2rem;

$segment-margin: 1.5rem;

$mobile-breakpoint: 800px;
$mobile-small-breakpoint: 350px;
$wide-breakpoint: 1400px;
$column-breakpoint: ($max-width + 200px);

html {
  height: 100%;
}
body {
  min-height: 100%;
}

body {
  font-family: 'Open Sans', sans-serif;
  font-weight: 500;
  line-height: 1.45;

  font-size: 16.5pt;
}

@media only screen and (max-width: $mobile-breakpoint) {
  .is-break-mobile {
    display: block;
    padding-top: $segment-margin;
  }
}

.root {
  overflow-x: hidden;
  min-height: 100vh;
  display: flex;
  flex-direction: column;

  position: relative;
}

.page,
.header,
.footer {
  width: 100%;
  max-width: $max-width;
  margin: auto;
  margin-top: 0;

  // @media only screen and (min-width: $mobile-breakpoint) {
  //   padding: 0 $page-padding;
  // }
}

.py-0 {
  padding-top: 0 !important;
  padding-bottom: 0 !important;
}

.pt-1 {
  padding-top: 0.25rem;
}
.pt-2 {
  padding-top: 0.5rem;
}
.pt-3 {
  padding-top: 0.75rem;
}
.pt-4 {
  padding-top: 1rem;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.mt-4 {
  margin-top: 1rem;
}

.ml-1 {
  margin-left: 0.25rem;
}
.ml-2 {
  margin-left: 0.5rem;
}
.ml-3 {
  margin-left: 0.75rem;
}
.ml-4 {
  margin-left: 1rem;
}

.with-images {
  display: flex;
  width: 100%;

  .image {
    flex: 1;
    // box-shadow: 0 0 6px 1px rgba(0, 0, 0, 0.125) inset;
    outline: 3px solid whitesmoke;

    margin: -3rem 0;
  }

  &.at-top .image {
    margin-top: -1rem;
  }

  .image-content {
    padding: 0 8vw;
  }

  @media only screen and (max-width: $column-breakpoint) {
    .image {
      visibility: hidden;
    }
    .image-content {
      padding: 0;
    }
  }
}

.image {
  z-index: -200;
  position: relative;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;

    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;

    opacity: 0.6;
  }

  &.is-repeated::before {
    background-repeat: repeat;
    background-size: 200px;
  }

  &.is-left::before {
    background-position: 0%;
  }
  &.is-right::before {
    background-position: 100%;
  }

  &.is-faint::before {
    opacity: 0.175;
  }
}

.image {
  &#terminal::before {
    background-image: url('images/terminal-2.png');
  }
  &#kugel::before {
    background-image: url('images/kugel-3.jpg');
  }
  &#papier::before {
    background-image: url('images/papier.jpg');
  }
}

.page-footer {
  background-color: rgb(248, 248, 248);

  &,
  a {
    color: $color-footer-text;
  }

  a:hover {
    color: black;
  }

  margin-top: 5rem;
  padding: 2.5rem 0;
}

$section-padding: 2.25rem;
$section-padding-slim: 2rem;

.footer {
  font-size: 12pt;

  a {
    text-decoration: none;
  }

  &__content {
    // padding: 0 $horizontal-padding;
    padding: 0 $section-padding;

    @media only screen and (max-width: $mobile-small-breakpoint) {
      padding-left: $section-padding-slim;
      padding-right: $section-padding-slim;
    }

    $element-padding: 0.5rem;
    $inner-horizontal-padding: 0.5rem;

    .footer-link {
      margin: (2 * $element-padding) 0;
      white-space: nowrap;
      a {
        padding: $element-padding $inner-horizontal-padding;
        padding-right: 5rem;
        height: 100%;
        width: 100%;
      }
    }
    p {
      margin: (2 * $element-padding) $inner-horizontal-padding;
      &.is-faint {
        font-size: 11pt;
        color: rgb(112, 112, 112);
      }
      &.is-faint-2 {
        font-size: 10pt;
        color: rgb(153, 153, 153);
      }
    }
  }
}

.footer-separator {
  height: 2.5rem;
}

#sticky-header {
  display: none;
}

.navigation {
  background-color: whitesmoke;
  font-size: 16pt;
  z-index: 100;

  &.is-animated {
    transition: top 0.25s ease;
  }

  &.is-sticky {
    background-color: white !important;
    overflow: hidden;
    text-align: right;
    position: fixed;
    top: 0;
    width: 100%;
    border-bottom: 2px solid whitesmoke;

    .header__content {
      padding: 0;
      @media only screen and (max-width: $mobile-breakpoint) {
        padding: 0 2.25rem;
      }

      a:hover {
        background-color: rgb(247, 247, 247);
      }

      .icon {
        padding-left: 1rem;
      }
    }
  }
}

.header__content {
  $link-horizontal-padding: 1rem;

  margin: 0 (-1 * $link-horizontal-padding);
  padding: 0 2rem;

  .breadcrumb {
    a {
      color: black;
      text-decoration: none !important;
      display: inline-block;
      padding: 0.75rem $link-horizontal-padding;

      &:hover {
        background-color: white;
      }
    }

    &__content {
      display: inline-block;

      display: flex;
      flex-direction: row;
      align-items: center;

      .icon {
        padding: 0 0.5rem 0 0.5rem;
        display: flex;
      }
    }
  }
}

.slanted-shadow {
  .section {
    // $padding: 2.5rem;
    padding-top: $section-padding;
    padding-bottom: $section-padding;
  }
}

.is-empty {
  width: $max-width - 64px; // FIXME
}

.section {
  padding: 5rem $section-padding;

  &.is-first {
    padding-top: 3.5rem;
  }

  @media only screen and (max-width: $mobile-small-breakpoint) {
    padding-left: $section-padding-slim;
    padding-right: $section-padding-slim;
  }

  &.is-small {
    // FIXME
    padding-top: 0;
    padding-bottom: 0;
    margin: 2.6rem 0;

    &:last-child {
      margin-bottom: 0;
    }
  }

  > p,
  .segment {
    margin-bottom: $segment-margin;
    &:last-child {
      margin-bottom: 0;
    }
    &.is-spaced > p {
      margin-bottom: 1rem;
      &:last-child {
        margin-bottom: 0;
      }
    }

    p,
    ul,
    ol {
      display: block;
      margin-bottom: 0.5rem;
      &:last-child {
        margin-bottom: 0;
      }
    }
  }
}

$underline-height: 0.8rem;

@mixin underline-shadow($color, $height: 0.25rem, $offset: 0rem) {
  // The $offset may not be larger than $height or a negative number.
  box-shadow: inset 0 (-1 * ($height - $offset)) $color,
    0 max(0, $offset) $color;
}

.break {
  display: inline-block !important;
  width: 0px !important;
}

.underline {
  &.is-yellow {
    @include underline-shadow($color-underline-yellow, $underline-height);
  }
  &.is-green {
    @include underline-shadow($color-underline-green, $underline-height);
  }
  &.is-green-light {
    @include underline-shadow($palette-green-light, $underline-height);
  }
  &.is-blue {
    @include underline-shadow($color-underline-blue, $underline-height);
  }
  &.is-blue-light {
    @include underline-shadow($palette-blue-light, $underline-height);
  }
}

.slanted-shadow {
  // &.is-blue .underline.is-blue {
  //   @include underline-shadow($palette-blue, $underline-height);
  // }
  &.is-green .underline.is-green {
    @include underline-shadow($palette-green-subtle, $underline-height);
  }
  &.is-blue .underline.is-blue {
    @include underline-shadow($palette-blue-subtle, $underline-height);
  }
}

// Highlight an element in a specific color,
// similar as you would with a marker pen.
.highlighted {
  @mixin shadow($color, $overlap-x, $overlap-y) {
    box-shadow: $overlap-x 0 0 $color, (-1 * $overlap-x) 0 0 $color,
      $overlap-x $overlap-y 0 $color, (-1 * $overlap-x) $overlap-y 0 $color;
    box-decoration-break: clone; // Firefox
  }
  // @mixin shadow-outlined(
  //   $color,
  //   $overlap-x,
  //   $overlap-y,
  //   $shadow-color,
  //   $shadow-width
  // ) {
  //   box-shadow: $overlap-x 0 0 $color, (-1 * $overlap-x) 0 0 $color,
  //     $overlap-x $overlap-y 0 $color, (-1 * $overlap-x) $overlap-y 0 $color,
  //     ($overlap-x + $shadow-width) (-1 * $shadow-width) 0 $shadow-color,
  //     (-1 * ($overlap-x + $shadow-width)) (-1 * $shadow-width) 0 $shadow-color,
  //     ($overlap-x + $shadow-width) ($overlap-y + $shadow-width) 0 $shadow-color,
  //     (-1 * ($overlap-x + $shadow-width)) ($overlap-y + $shadow-width) 0
  //       $shadow-color;
  //   box-decoration-break: clone; // Firefox
  // }

  $overlap-vertical: 0.25rem;
  $overlap-vertical-inline: 0.025rem;

  $overlap-horizontal: 0.75rem;
  $overlap-horizontal-wide: $overlap-horizontal + 0.25rem;
  $overlap-horizontal-slim: $overlap-horizontal - 0.25rem;
  $overlap-horizontal-inline: $overlap-horizontal-slim;

  $border-radius: 4pt;

  $content: #{&}__content;
  $text: #{$content}__text;

  #{$content} {
    display: inline;
    border-radius: $border-radius;

    // Fixes white background shining through
    // between the box-shadow and the background
    // when the border-radius is not equal to 0.
    // &::before {
    //   content: '';
    //   position: absolute;
    //   top: 0;
    //   left: 0;
    //   bottom: 0;
    //   z-index: -100;
    //   border-radius: $border-radius;
    // }
  }

  &.is-inline {
    #{$content} {
      display: inline-block;
      margin: 0 $overlap-horizontal-inline;
    }
  }

  // #{$content} {
  //   &::before {
  //     right: -1 * $overlap-horizontal;
  //   }
  // }

  // &.is-wider {
  //   #{$content} {
  //     &::before {
  //       right: -1 * $overlap-horizontal-wide;
  //     }
  //   }
  // }

  $colors: 'blue' $palette-blue $color-bright-text,
    'blue-light' $palette-blue-light black,
    'green-light' $palette-green-light black,
    'green-lighter' $palette-green-lighter black,
    'blue-subtle' $palette-blue-subtle black,
    'green-subtle' $palette-green-subtle black,
    'yellow' $color-underline-yellow black,
    'black' $palette-black $color-bright-text, 'light' whitesmoke black;

  @each $name, $color, $color-text in $colors {
    &.is-#{$name} {
      color: $color-text;
      // #{$content}::before
      // #{$content},
      #{$text} {
        background-color: $color;
      }
      #{$content} {
        @include shadow($color, $overlap-horizontal, $overlap-vertical);
      }
      &.is-padded {
        #{$content} {
          margin: 0 $overlap-horizontal;
        }
      }
      &.is-wide {
        #{$content} {
          @include shadow($color, $overlap-horizontal-wide, $overlap-vertical);
        }
        &.is-padded {
          #{$content} {
            margin: 0 $overlap-horizontal-wide;
          }
        }
      }
      &.is-slim {
        #{$content} {
          @include shadow($color, $overlap-horizontal-slim, $overlap-vertical);
        }
        &.is-padded {
          #{$content} {
            margin: 0 $overlap-horizontal-slim;
          }
        }
      }
      &.is-inline {
        #{$content} {
          @include shadow(
            $color,
            $overlap-horizontal-inline,
            $overlap-vertical-inline
          );
        }
      }
      &::before {
        background-color: $color;
      }
    }
  }

  position: relative;

  // This element covers the left shadow of the text,
  // which would show dents where there would be
  // a rounded border per line of text.
  &::before {
    content: '';
    display: inline-block;
    position: absolute;
    top: 0;
    bottom: 0;
    border-radius: $border-radius;
  }

  &::before {
    left: -1 * $overlap-horizontal;
    width: $overlap-horizontal;
  }

  &.is-wide::before {
    left: -1 * $overlap-horizontal-wide;
    width: $overlap-horizontal-wide;
  }
  &.is-slim::before {
    left: -1 * $overlap-horizontal-slim;
    width: $overlap-horizontal-slim;
  }
  &.is-inline::before {
    display: none;
  }

  &.is-padded {
    &::before {
      margin: 0 $overlap-horizontal;
    }
    &.is-wide::before {
      margin: 0 $overlap-horizontal-wide;
    }
    &.is-slim::before {
      margin: 0 $overlap-horizontal-slim;
    }
  }
}

.highlight {
  // $color: rgba(255, 251, 0, 0.507);
  // $color: rgb(255, 253, 126);
  // $color: rgb(252, 255, 154);
  // $color: rgb(255, 249, 167);

  // @mixin highlight-color($color, $overlap-x, $overlap-y) {
  //   box-shadow: 0 0 0 $color, 0 0 0 $color, 0 $overlap-y 0 $color,
  //     0 $overlap-y 0 $color;
  //   box-decoration-break: clone; // Firefox
  // }
  @mixin highlight-color($color, $overlap-x, $overlap-y) {
    box-shadow: $overlap-x 0 0 $color, (-1 * $overlap-x) 0 0 $color,
      $overlap-x $overlap-y 0 $color, (-1 * $overlap-x) $overlap-y 0 $color;
    box-decoration-break: clone; // Firefox
  }

  display: inline;

  border-radius: 4pt;

  $horizontal-overlap: 0.75rem;
  $horizontal-wide-addition: 0.25rem;
  $vertical-overlap: 0.25rem;

  &.is-inline {
    display: inline-block;
    padding: 0 0.3rem;
  }
  &.is-padded {
    margin-left: 0.5rem;
    &.is-small {
      margin-left: 0.25rem;
    }
  }
  &.is-rounded {
    border-radius: 0.25rem;
  }

  position: relative;

  // Fixes white background shining through
  // between the box-shadow and the background
  // when the border-radius is not equal to 0.
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    z-index: -10;
    border-radius: 0;
  }

  &.is-black {
    $color: $palette-black;
    // $color: adjust-color(#2caf5f, $lightness: -20, $saturation: -20);

    color: $color-bright-text;

    &,
    &::before {
      background-color: $color;
    }

    &.is-small {
      @include highlight-color($color, 0.25rem, 0.2rem);
    }
    &.is-inline {
      box-shadow: 0 0.1rem 0 $color;
    }
    &:not(.is-small) {
      // border: 0.5px solid $palette-black;
      @include highlight-color($color, $horizontal-overlap, $vertical-overlap);
      &.is-wider {
        @include highlight-color(
          $color,
          $horizontal-overlap + $horizontal-wide-addition,
          $vertical-overlap
        );
      }
    }
  }
  &.is-blue {
    color: $color-bright-text;

    &,
    &::before {
      background-color: $palette-blue;
    }

    &.is-small {
      @include highlight-color($palette-blue, 0.25rem, 0.2rem);
    }
    &:not(.is-inline):not(.is-small) {
      @include highlight-color(
        $palette-blue,
        $horizontal-overlap,
        $vertical-overlap
      );
    }
  }
  &.is-subtle {
    // $color: rgb(220, 239, 255);
    // $color: rgb(236, 236, 236);
    $color: rgb(228, 243, 255);

    color: black;
    background-color: $color;
    &.is-small {
      @include highlight-color($color, 0.5rem, 0.2rem);
    }
  }
  &.is-light {
    $color: rgb(248, 248, 248);

    &.is-bordered {
      border: 1px solid rgb(200, 200, 200);
    }

    color: black;
    background-color: $color;
    &.is-small {
      @include highlight-color($color, 0.5rem, 0.2rem);
    }
  }
}

.icon-arrow {
  // $color-arrow: rgb(59, 59, 59);
  $color-arrow: black;

  $size: 18pt;
  $thickness: 2px;

  width: $size;
  height: $size;
  display: inline-block;

  position: relative;
  transform: rotate(-45deg);

  &.is-left {
    transform: rotate(-45deg + 180deg);
  }

  // bar
  &::before {
    content: '';
    position: absolute;
    height: $thickness;
    width: $size + 0.5pt;
    background-color: $color-arrow;
    border-radius: 100px;
    transform: rotate(45deg);
    transform-origin: bottom;
    left: 0;
    top: 50%;
  }

  // arrow
  &::after {
    content: '';
    position: absolute;
    border-bottom-style: solid;
    border-bottom-width: $thickness;
    border-right-style: solid;
    border-right-width: $thickness;
    border-color: $color-arrow;
    height: 10px;
    width: 10px;
    bottom: 0;
    right: 0;
  }
}

.icon-close {
  // $color-arrow: rgb(59, 59, 59);
  $color-arrow: black;

  $size: 18pt;
  $thickness: 2px;

  width: $size;
  height: $size;
  display: inline-block;

  position: relative;

  // bar
  &::before,
  &::after {
    content: '';
    position: absolute;
    height: $thickness;
    width: $size;
    background-color: $color-arrow;
    border-radius: 100px;
    transform: rotate(45deg);
    transform-origin: center;
    left: 0;
    top: 50%;
  }

  &::after {
    transform: rotate(-45deg);
  }
}

$svg-icon-size: 1.25rem;

.icon-whatsapp {
  background: url('../icons/whatsapp.svg');
}
.icon-signal {
  background: url('../icons/signal.svg');
}
.icon-discord {
  background: url('../icons/discord.svg');
}
.icon-zoom {
  background: url('../icons/zoom.svg');
}
.icon-meeting {
  background: url('../icons/meeting.svg');
}
.icon-paper-plane {
  background: url('../icons/paper-plane.svg');
}
.icon-linkedin {
  background: url('../icons/linkedin.svg');
}
.icon-github {
  background: url('../icons/github.svg');
}

.svg-icon {
  display: inline-block;
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
  // margin: $svg-icon-size / 4;
  height: $svg-icon-size;
  width: $svg-icon-size;
}

.is-color-link {
  color: $color-link !important;
}

a {
  $color: $color-link;

  color: $color;
  text-decoration: 2px underline;
  text-decoration-color: adjust-color($color: $color, $alpha: -0.75);
  text-underline-offset: 1pt;

  &:hover {
    color: adjust-color($color, $lightness: -10%);
    text-decoration-color: adjust-color($color: $color, $alpha: -0.5);
  }

  // &:visited {
  //   color: rgb(76, 58, 240);
  // }
}

.is-hidden {
  display: none !important;
}

@media only screen and (max-width: $mobile-breakpoint) {
  .is-hidden-mobile {
    display: none !important;
  }
}

.is-size-small {
  font-size: 14pt !important;
}

.is-block {
  display: block !important;
}

.is-tall-line {
  line-height: 1.8;
}

.is-bolder {
  font-weight: 600;
}
